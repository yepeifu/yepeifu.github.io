{"version":3,"file":"static/js/310.fe7dc824.chunk.js","mappings":"uOAEMA,EAAS,CACXC,SAAU,CACNC,KAAM,SAGVC,WAAY,CACRC,KAAM,KAGRC,EAAa,CACfF,WAAY,CAER,GAyER,EAtEc,SAACG,GACX,IAAAC,EAAeC,EAAAA,EAAAA,UAARC,GAAsBC,EAAAA,EAAAA,GAAAH,EAAA,GAAlB,GAmBX,OACII,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAACN,EAAAA,GAAIO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACDH,UAAU,YACNZ,GAAM,IACVS,KAAMA,EACNO,KAAK,gBACLC,SAhBK,SAACC,GAElB,EAeYC,cAAe,CACXC,UAAU,GAEdC,eAdW,SAACC,GACpBC,QAAQC,IAAI,UAAWF,EAC3B,EAaYG,MAAO,CACHC,SAAU,KACZb,SAAA,EAEFF,EAAAA,EAAAA,KAACH,EAAAA,EAAAA,KAAS,CACNQ,KAAK,OACLW,MAAM,qBACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,qDAEfjB,UAEFF,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,OAEVpB,EAAAA,EAAAA,KAACH,EAAAA,EAAAA,KAAS,CACNQ,KAAK,WACLW,MAAM,eACNC,MAAO,CAEH,CAAEC,UAAU,EAAMC,QAAS,+CAC7BjB,UAEFF,EAAAA,EAAAA,KAACoB,EAAAA,EAAAA,SAAc,OAEnBjB,EAAAA,EAAAA,MAACN,EAAAA,EAAAA,MAASO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKV,GAAU,IAAAQ,SAAA,EACrBF,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CAACC,KAAK,UAAUC,QAzDtB,WACbzB,EAAK0B,iBAAiBC,MAAK,SAAClB,GACxBK,QAAQC,IAAIN,GACTA,GACCZ,EAAM+B,QAAQC,KAAK,QAG3B,GACJ,EAiDyDzB,SAAC,kBAG1CF,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CAACpB,UAAU,UAAUsB,QAhD5B,WACZzB,EAAK8B,aACT,EA8C6D1B,SAAC,0BAOlE,C","sources":["pages/login/index.js"],"sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport \"./login.less\"\r\nconst layout = {\r\n    labelCol: {\r\n        flex: '110px',\r\n    },\r\n\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        // offset: 8,\r\n        // span: 16,\r\n    },\r\n};\r\nconst Login = (props) => {\r\n    const [form] = Form.useForm();\r\n    const onSubmit = () => {\r\n        form.validateFields().then((values) => {\r\n            console.log(values)\r\n            if(values){\r\n                props.history.push(\"/home\")\r\n            }\r\n           \r\n        })\r\n    }\r\n    const onFinish = (values) => {\r\n\r\n    };\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo)\r\n    }\r\n    return (\r\n        <div className='login-box'>\r\n            <Form\r\n                className='form-box'\r\n                {...layout}\r\n                form={form}\r\n                name=\"control-hooks\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinishFailed={onFinishFailed}\r\n                style={{\r\n                    maxWidth: 600,\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"note\"\r\n                    label=\"用户名\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入你的用户名'\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    label=\"密码\"\r\n                    rules={[\r\n\r\n                        { required: true, message: '请输入你的密码' },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" onClick={onSubmit}>\r\n                        登录\r\n                    </Button>\r\n                    <Button className='btn-box' onClick={onReset}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;"],"names":["layout","labelCol","flex","wrapperCol","span","tailLayout","props","_Form$useForm","Form","form","_slicedToArray","_jsx","className","children","_jsxs","_objectSpread","name","onFinish","values","initialValues","remember","onFinishFailed","errorInfo","console","log","style","maxWidth","label","rules","required","message","Input","Button","type","onClick","validateFields","then","history","push","resetFields"],"sourceRoot":""}